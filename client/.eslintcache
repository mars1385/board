[{"C:\\xmehran\\Programming\\node\\board\\client\\src\\index.js":"1","C:\\xmehran\\Programming\\node\\board\\client\\src\\App.js":"2","C:\\xmehran\\Programming\\node\\board\\client\\src\\Utils\\setAuthHeader.js":"3","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\store.js":"4","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\user\\userActions.js":"5","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\private-route\\PrivateRoute.js":"6","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\header\\Header.js":"7","C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Home\\Home.js":"8","C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Register\\Register.js":"9","C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Login\\Login.js":"10","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\rootReducers.js":"11","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\type.js":"12","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\user\\userSelectors.js":"13","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\user\\userReducer.js":"14","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\create-project\\CreateProject.js":"15","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\project\\projectActions.js":"16","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\project\\projectReducer.js":"17","C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Projects\\Projects.js":"18","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\card\\ProjectCard.js":"19","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\project\\projectSelector.js":"20","C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Project\\Project.js":"21","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\tasks\\tasksReducer.js":"22","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\create-task\\CreateTask.js":"23","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\tasks\\tasksActions.js":"24","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\tasks\\tasksSelector.js":"25","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\update-task\\UpdateTask.js":"26","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\invite-user\\InviteUser.js":"27"},{"size":146,"mtime":1622901802566,"results":"28","hashOfConfig":"29"},{"size":1904,"mtime":1614777344068,"results":"30","hashOfConfig":"29"},{"size":356,"mtime":1612941158907,"results":"31","hashOfConfig":"29"},{"size":428,"mtime":1612939132713,"results":"32","hashOfConfig":"29"},{"size":1670,"mtime":1622905883985,"results":"33","hashOfConfig":"29"},{"size":636,"mtime":1614179926906,"results":"34","hashOfConfig":"29"},{"size":4017,"mtime":1614457184588,"results":"35","hashOfConfig":"29"},{"size":197,"mtime":1612205681373,"results":"36","hashOfConfig":"29"},{"size":5802,"mtime":1622901338889,"results":"37","hashOfConfig":"29"},{"size":4559,"mtime":1622901291216,"results":"38","hashOfConfig":"29"},{"size":370,"mtime":1614783120909,"results":"39","hashOfConfig":"29"},{"size":1226,"mtime":1622906171083,"results":"40","hashOfConfig":"29"},{"size":293,"mtime":1612943230601,"results":"41","hashOfConfig":"29"},{"size":743,"mtime":1613064073076,"results":"42","hashOfConfig":"29"},{"size":4111,"mtime":1622901756243,"results":"43","hashOfConfig":"29"},{"size":3713,"mtime":1622910200664,"results":"44","hashOfConfig":"29"},{"size":1500,"mtime":1622910357801,"results":"45","hashOfConfig":"29"},{"size":2380,"mtime":1622901853651,"results":"46","hashOfConfig":"29"},{"size":1794,"mtime":1622900381333,"results":"47","hashOfConfig":"29"},{"size":405,"mtime":1614462451597,"results":"48","hashOfConfig":"29"},{"size":5645,"mtime":1622910466265,"results":"49","hashOfConfig":"29"},{"size":613,"mtime":1614941006631,"results":"50","hashOfConfig":"29"},{"size":3524,"mtime":1614862942906,"results":"51","hashOfConfig":"29"},{"size":1273,"mtime":1615310347753,"results":"52","hashOfConfig":"29"},{"size":280,"mtime":1614782576060,"results":"53","hashOfConfig":"29"},{"size":2481,"mtime":1615311344189,"results":"54","hashOfConfig":"29"},{"size":3544,"mtime":1622906498800,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1sisg75",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xmehran\\Programming\\node\\board\\client\\src\\index.js",[],["114","115"],"C:\\xmehran\\Programming\\node\\board\\client\\src\\App.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Utils\\setAuthHeader.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\store.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\user\\userActions.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\private-route\\PrivateRoute.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\header\\Header.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Home\\Home.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Register\\Register.js",["116"],"// ------------imports---------------\r\nimport React, { memo, useEffect } from 'react';\r\nimport { Container, Avatar, Typography, TextField, Button, makeStyles, Grid } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { registerUser } from '../../Redux/user/userActions';\r\nimport { selectCurrentUser, selectServerErrors } from '../../Redux/user/userSelectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// ------------end imports-----------\r\n\r\n// material ui style\r\nconst useStyles = makeStyles((theme) => ({\r\n  register: {\r\n    marginTop: theme.spacing(9),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Register = ({ history }) => {\r\n  // state\r\n  const { register, handleSubmit, errors, setError, clearErrors } = useForm();\r\n  const classes = useStyles();\r\n\r\n  const { currentUser, serverErrors } = useSelector(\r\n    createStructuredSelector({\r\n      currentUser: selectCurrentUser,\r\n      serverErrors: selectServerErrors,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (serverErrors) {\r\n      serverErrors.forEach((err) => {\r\n        if (err.field) {\r\n          setError(err.field, {\r\n            message: err.message,\r\n          });\r\n        } else {\r\n          setError('email', {\r\n            message: err.message,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [serverErrors, setError]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/projects');\r\n    }\r\n  }, [currentUser, history]);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    if (data.confirmPassword === data.password) {\r\n      dispatch(\r\n        registerUser({\r\n          name: data.name,\r\n          email: data.email,\r\n          password: data.password,\r\n        })\r\n      );\r\n    } else {\r\n      setError('confirmPassword', {\r\n        type: 'validate',\r\n        message: 'Passwords Must be Match',\r\n      });\r\n    }\r\n  };\r\n  // jsx\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <div className={classes.register}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                fullWidth\r\n                id='name'\r\n                label='Name'\r\n                name='name'\r\n                autoComplete='name'\r\n                autoFocus\r\n                inputRef={register({ required: { value: true, message: 'Please add your Name' } })}\r\n              />\r\n              {errors.name && (\r\n                <Typography align='inherit' color='error' variant='subtitle1'>\r\n                  {errors.name.message}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                fullWidth\r\n                id='email'\r\n                label='Email Address'\r\n                name='email'\r\n                type='email'\r\n                autoComplete='email'\r\n                inputRef={register({ required: { value: true, message: 'Please add a valid Email' } })}\r\n              />\r\n              {errors.email && (\r\n                <Typography align='inherit' color='error' variant='subtitle1'>\r\n                  {errors.email.message}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                inputRef={register({\r\n                  required: {\r\n                    value: true,\r\n                    message: 'Please add a Password!( Password must be more than 6 character)',\r\n                  },\r\n                })}\r\n              />\r\n              {errors.password && (\r\n                <Typography align='inherit' color='error' variant='subtitle2'>\r\n                  {errors.password.message}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                margin='normal'\r\n                fullWidth\r\n                name='confirmPassword'\r\n                label='Confirm Password'\r\n                type='password'\r\n                id='confirmPassword'\r\n                inputRef={register({ required: { value: true, message: 'Please add password again' } })}\r\n              />\r\n              {errors.confirmPassword && (\r\n                <Typography align='inherit' color='error' variant='subtitle2'>\r\n                  {errors.confirmPassword.message}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n                Register\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(Register);\r\n","C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Login\\Login.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\rootReducers.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\type.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\user\\userSelectors.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\user\\userReducer.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\create-project\\CreateProject.js",["117","118"],"import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from 'react-hook-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  makeStyles,\r\n  Modal,\r\n  Backdrop,\r\n  Fade,\r\n  Fab,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProject } from '../../Redux/project/projectActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst CreateProject = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { errors, register, handleSubmit } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = (data, event) => {\r\n    event.preventDefault();\r\n    dispatch(addProject({ title: data.title, description: data.description, history }));\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant='contained'\r\n        size='medium'\r\n        color='secondary'\r\n        aria-label='add'\r\n        onClick={handleOpen}\r\n        startIcon={<SaveIcon />}>\r\n        Create Project\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby='transition-modal-title'\r\n        aria-describedby='transition-modal-description'\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Fade in={open}>\r\n          <Container component='main' maxWidth='sm' className={classes.paper}>\r\n            <Typography variant='h4'>Create Project</Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    margin='normal'\r\n                    fullWidth\r\n                    id='title'\r\n                    label='Title'\r\n                    name='title'\r\n                    autoComplete='title'\r\n                    autoFocus\r\n                    inputRef={register({ required: true })}\r\n                  />\r\n                  {errors.title && (\r\n                    <Typography align='inherit' color='error' variant='subtitle2'>\r\n                      {'Please add a Title for project'}\r\n                    </Typography>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='outlined'\r\n                    margin='normal'\r\n                    fullWidth\r\n                    id='description'\r\n                    label='Description'\r\n                    name='description'\r\n                    autoComplete='description'\r\n                    inputRef={register({ required: true })}\r\n                  />\r\n                  {errors.description && (\r\n                    <Typography align='inherit' color='error' variant='subtitle2'>\r\n                      {'Please add a Description for project'}\r\n                    </Typography>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type='submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    startIcon={<SaveIcon />}\r\n                    className={classes.submit}>\r\n                    Create\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Container>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateProject);\r\n","C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\project\\projectActions.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\project\\projectReducer.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Projects\\Projects.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\card\\ProjectCard.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\project\\projectSelector.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Pages\\Project\\Project.js",["119","120"],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\tasks\\tasksReducer.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\create-task\\CreateTask.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\tasks\\tasksActions.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Redux\\tasks\\tasksSelector.js",[],"C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\update-task\\UpdateTask.js",["121"],"import React from 'react';\r\nimport { Paper, InputBase, Checkbox, makeStyles, withStyles, TableSortLabel } from '@material-ui/core';\r\nimport green from '@material-ui/core/colors/green';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTask } from '../../Redux/tasks/tasksActions';\r\n// material ui style\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    padding: theme.spacing(1),\r\n    marginBottom: 6,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    color: grey[400],\r\n    textDecoration: 'line-through',\r\n  },\r\n}));\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color='default' {...props} />);\r\n\r\nconst UpdateTask = ({ task }) => {\r\n  const classes = useStyles();\r\n  const [taskBody, setTaskBody] = React.useState(task.body);\r\n  const [status, setStatus] = React.useState(task.status);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handelUpdateTask = (event) => {\r\n    if (taskBody === '') {\r\n      setError('error');\r\n    } else if (event.key === 'Enter' && taskBody !== '') {\r\n      dispatch(\r\n        updateTask({ updatedData: { body: taskBody, status }, taskId: task._id, projectId: task.project })\r\n      );\r\n    } else if (event.target.name === 'status' && taskBody !== '') {\r\n      setStatus((state) => !state);\r\n      dispatch(\r\n        updateTask({\r\n          updatedData: { body: taskBody, status: event.target.checked },\r\n          taskId: task._id,\r\n          projectId: task.project,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setTaskBody(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={1} className={classes.input}>\r\n      <InputBase\r\n        onKeyDown={(event) => handelUpdateTask(event)}\r\n        value={taskBody}\r\n        disabled={status ? true : false}\r\n        onChange={onChange}\r\n        className={status ? classes.completed : ''}\r\n        style={{ width: '92%' }}\r\n        placeholder={error && 'Task can not be empty'}\r\n        name='body'\r\n        id='body'\r\n      />\r\n      <GreenCheckbox\r\n        name='status'\r\n        checked={status}\r\n        onChange={(event) => {\r\n          handelUpdateTask(event);\r\n        }}\r\n        id='status'\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default UpdateTask;\r\n","C:\\xmehran\\Programming\\node\\board\\client\\src\\Components\\invite-user\\InviteUser.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":33,"column":53,"nodeType":"128","messageId":"129","endLine":33,"endColumn":64},{"ruleId":"126","severity":1,"message":"130","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"131","line":11,"column":3,"nodeType":"128","messageId":"129","endLine":11,"endColumn":6},{"ruleId":"126","severity":1,"message":"132","line":53,"column":27,"nodeType":"128","messageId":"129","endLine":53,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":78,"column":6,"nodeType":"135","endLine":78,"endColumn":42,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":2,"column":62,"nodeType":"128","messageId":"129","endLine":2,"endColumn":76},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'clearErrors' is assigned a value but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'Fab' is defined but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'getTasks'. Either exclude it or remove the dependency array. Outer scope values like 'getTasks' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["140"],"'TableSortLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [dispatch, currentProject]",{"range":"143","text":"144"},[2241,2277],"[dispatch, currentProject]"]